; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; [platformio]
;   Configuration for PlatformIO itself.
;   default_envs points to a specific environment;
;   namely `usb`, `ota`, `jtag` or `olimex`.
;
;   I only tested `usb` environment on wESP32.
;   Read at leas following link when you use other environments.
;     https://wesp32.com/wesp32-prog/#other-programmers
[platformio]
default_envs = usb

; [env:common]
; `common` environment
;   This is the root environment from which each specific environment stems.
;
;   `build_flags` uses Dynamic build flags.
;   See also:
;     - Dynamic build flags:
;       https://docs.platformio.org/en/latest/projectconf/section_env_build.html#dynamic-build-flags
;
;   `espressif32` platform with `arduino` framework
;     - espressif/arduino-esp32
;       License: LGPL-2.1
;       https://github.com/espressif/arduino-esp32
;   `Espressif ESP32 Dev Module
;       https://docs.platformio.org/en/latest/boards/espressif32/esp32dev.html
;
;   Libraries
;     - ArduinoLog library:
;       https://platformio.org/lib/show/1532/ArduinoLog
;       LOG_LEVEL:
;         0: silent
;         1: fatal
;         2: error
;         3: warning
;         4: notice
;         5: trace
;         6: verbose
;     - SimpleSerialShell:
;       https://github.com/philj404/SimpleSerialShell
;     - IRremote
;       https://github.com/Arduino-IRremote/Arduino-IRremote
;
[env:common]
platform     = espressif32
framework    = arduino
board        = wesp32
build_flags  = !python version_macro.py
               -DLOG_LEVEL=4
lib_deps     = thijse/ArduinoLog          @ ^1.0.3 ; MIT license
             = philj404/SimpleSerialShell @ ^0.2.1 ; MIT license
             = z3t0/IRremote              @ ^3.3.0 ; MIT license since v2.8.0

; [env:usb]
; `usb` environment
;   Upload and Monitor via USB-Serial Converter module for wESP32 i.e. wESP32-Prog
;   Only config specific to wESP32-Prog goes here.
;
;   (Optional) Give persistent and unique alias for individual wESP32-Prog module
;      A DevKitC module is given a name `/dev/ttyUSB0` or some such by udev on linux systems.
;      Most of the time it just works and sometimes doesn't
;      to use this kernel name for `upload_port` or `monitor_port`.
;      Here's why alias is preferred over kernel name when specifying device.
;
;      The problem is that the number `0` in `/dev/ttyUSB0` is inconsistent between connection.
;      It can change when you disconnect and connect the module too rapidly or
;      when another module/other usb-converter is already connected.
;
;      PlatformIO surely detects correct module by scanning usb bus when you:
;        - give no `upload_port` line
;        - use only one module at a time
;        - are lucky
;      There is a more elegant and reliable way to assign upload destination however.
; 
;      A unique serial number is assigned to whichever wESP32-Prog module I got.
;      `udevadm` tool will show you it.
;      ```
;        $  udevadm info --attribute-walk --path=/sys/class/usb-serial/devices/ttyUSB6
;        ...
;        looking at device '/devices/pci0000:00/0000:00:14.0/usb3/3-2/3-2:1.0/ttyUSB6':
;           KERNEL=="ttyUSB6"
;           SUBSYSTEM=="usb-serial"
;           DRIVER=="cp210x"
;        ...
;
;        looking at parent device '/dev ices/pci0000:00/0000:00:14.0/usb3/3-2':
;           KERNELS=="3-2"
;           SUBSYSTEMS=="usb"
;           DRIVERS=="usb"
;           ...
;           ATTRS{product}=="CP2102N USB to UART Bridge Controller"
;           ...
;           ATTRS{serial}=="12381c4ba69ae81189caaf7479b6371b"
;        ...
;      ```
;      Two aliases per module will be automatically created with following udev rule:
;      (`/dev/wESP32-Prog_12381c4ba69ae81189caaf7479b6371b` and `/dev/ttyWESP32-6` in this case).
;      ```
;        KERNEL=="ttyUSB[0-9]*", ATTRS{idVendor}=="10c4", ATTRS{idProduct}=="ea60", ATTRS{product}=="CP2102N USB to UART Bridge Controller", ATTRS{serial}=="?*", SYMLINK+="wESP32-Prog_$attr{serial} ttyWESP32-%n"
;      ```
;
;      You can make use of `cp210x-cfg` to change Product name and Serial.
;        -  cp210x-cfg: https://github.com/DiUS/cp210x-cfg
;
;      Execute following to change them.
;      # cp210x-cfg -m 10c4:ea60 -N "IRremote on wESP32" -S "IRremote-wESP32-0001"
;
[env:usb]
extends         = env:common
upload_protocol = esptool
upload_port     = /dev/wESP32-Prog_12381c4ba69ae81189caaf7479b6371b
monitor_speed   = 115200
monitor_port    = /dev/wESP32-Prog_12381c4ba69ae81189caaf7479b6371b

; `ota` environment
;   Upload and Monitor via WiFi.
;   Only OTA-specific config goes here.
;   OTA need to be implemented in the source code.
;
[env:ota]
extends         = env:common
upload_protocol = espota
upload_port     = irremote.local
upload_flags    = --port=8266
monitor_speed   = 115200

; `jtag` environment
;   Upload via esp32-prog and monitor via wESP32-Prog.
;   I haven't connected RJ45 alongside jtag so use with caution.
;     https://docs.platformio.org/en/latest/plus/debug-tools/esp-prog.html
;
[env:jtag]
extends         = env:common
build_type      = debug
upload_protocol = esp-prog
debug_tool      = esp-prog
monitor_port    = /dev/wESP32-Prog_12381c4ba69ae81189caaf7479b6371b
monitor_speed   = 115200

; `olimex` environment
;   Upload via Olimex ARM-USB-TINY-H and monitor via wESP32-Prog.
;   I also haven't connected RJ45 and olimex simultaneously.
;   Refer to following link for Pin assign.
;     https://docs.platformio.org/en/latest/plus/debug-tools/olimex-arm-usb-tiny-h.html#debugging-tool-olimex-arm-usb-tiny-h
;   Here's udev rule for persistent alias:
;   ```
;   # Persistent alias for Olimex ARM-USB-TINY-H
;   KERNEL=="ttyUSB[0-9]*", ATTRS{idVendor}=="15ba", ATTRS{idProduct}=="002a", ATTRS{product}=="Olimex OpenOCD JTAG ARM-USB-TINY-H", ATTRS{serial}=="FT4HFPYN", SYMLINK+="ttyARMUSB"
;   ```
;
[env:olimex]
extends         = env:common
build_type      = debug
upload_protocol = olimex-arm-usb-tiny-h
upload_port     = /dev/ttyARMUSB
debug_tool      = olimex-arm-usb-tiny-h
monitor_port    = /dev/wESP32-Prog_12381c4ba69ae81189caaf7479b6371b
monitor_speed   = 115200
